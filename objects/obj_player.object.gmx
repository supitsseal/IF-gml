<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Variables

//Player state 0 = ship, 1 = male, 2 = female, 3 = dead
playerState = 0;

//Player direction - human. 0 = right, 1 = left
playerDir = 0

//1 = male, 2 = female,
gender = 1

//Player controls
forward = ord("W")
backward = ord("S")
left = ord("A")
right = ord("D")
enter = ord("E")
shoot = vk_space

//Player attributes
global.playerHealth = 100;
global.playerPlanetHealth = 100;
global.playerEnergy = 100;
global.playerScore = 0;
global.playerWeapon = false;
can_jump = false;
turnSpeed = 2.5

debugMode = false

//Coins
coinCountLevel = 0
currentCoins = 0

global.enter = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gravity and Collisions

if(global.planetGrav == undefined) {
        global.planetGrav = 0;
}
if(playerState != 0 || playerState != 3) {

    //Gravity
    if(place_free(x,y+1)) {
        gravity  = global.planetGrav;
    } else {
        gravity  = 0
    }
    
    
} else {
    gravity = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

scr_render()

if(playerState == 0) {
global.playerPlanetHealth = 100;
view_angle[0] = -direction + 90;

    if(keyboard_check(right)) {
        direction -= turnSpeed
    }
    
    if(keyboard_check_pressed(shoot) &amp;&amp; global.playerEnergy &gt; 0) {
        instance_create(x,y,obj_player_laser)
        global.playerEnergy -= (100 / 8)
    }
    
    if(keyboard_check(left)) {
        direction += turnSpeed
    }
    
    if(keyboard_check(forward)) {
        speed = 5;
        effect_create_below(ef_spark,x,y,.00003,c_red)
        effect_create_below(ef_spark,x,y,.00003,c_silver)
    } else if(keyboard_check(backward)) {
        speed = -5;
    } else {
        speed = 0;
    }
    
} else if(playerState != 3) {

    if(keyboard_check(right)) {
        image_speed = .5;
        x += 5;
        playerDir = 0
    } else if(keyboard_check(left)) {
        image_speed = .5;
        x -= 5;
        playerDir = 1
    } else {
        image_speed = 0
        image_index = 0
    }
    
    if(keyboard_check_pressed(forward)) {
        if(can_jump) {
            vspeed -= 5
            can_jump = false
        }
    }
}


if(keyboard_check_released(vk_escape)) {
    global.playerHealth-=100;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Validation

if(global.playerHealth &lt; 1) {
    global.playerHealth = 0;
    playerState = 3;
} else if(global.playerHealth &gt; 100) {
    global.playerHealth = 100;
}

if(global.planetGrav &gt;= .3) {
   global.planetGrav = .3;
}

if(global.playerEnergy &lt; 0) {
    global.playerEnergy = 0;
} else if(global.playerEnergy &gt; 100) {
    global.playerEnergy = 100;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging Code

if(debugMode) {
    if(keyboard_check(vk_up)) {
        y-=5;
    } else if(keyboard_check(vk_down)) {
        y+=5;
    }

    if(keyboard_check(vk_left)) {
        x-=5;
        playerDir = 1
    }else if(keyboard_check(vk_right)) {
        x+=5;
        playerDir = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapons

if(global.playerWeapon) {
    if(keyboard_check_pressed(shoot)) {
        if(playerDir == 0) {
            instance_create(x+20,y-9,obj_laser_player_planet)
        }
        
        if(playerDir == 1) {
            instance_create(x-20,y-9,obj_laser_player_planet)
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
var dist,dir,xdir,ydir;

dist=point_distance(x,y,xprevious,yprevious);
dir=degtorad(point_direction(xprevious,yprevious,x,y));
xdir=cos(dir);
ydir=-sin(dir);

x=xprevious;
y=yprevious;

repeat dist{

    if place_meeting(x+xdir,y,other.object_index) {
        hspeed=0
    } else {
        x+=xdir
    }
    
    if place_meeting(x,y+ydir,other.object_index) {
        vspeed=0
        can_jump = true;
    } else {
        y+=ydir
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_planet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(enter)) {

var otherID = other.id;
var type = other.type;

if(type == 0) {
    room_goto(rm_earthPlanet)
    x = 16
    y = 0
    playerState = gender
}

if(type == 1) {
    room_goto(rm_lavaWorld)
    x = 16
    y = 0
    playerState = gender
}

    if(type == 2) {
        room_goto(rm_rockPlanet)
        x = 16
        y = 0
        playerState = gender
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_star">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playerState != 3) {
    global.playerHealth += 10;
    global.playerEnergy += (100 / 8);
    global.playerScore += 5;
    other.destroy = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playerState == 0) {
    sprite_index = spr_player_ship;
    image_angle = direction;
    image_index = (7 / 100) * global.playerEnergy
    draw_self()
    
    var i = (43 / 100) * global.playerHealth

    if(i &lt; 0) {
        i = 0;
    } else if (i &gt; 43) {
        i = 43;
    }
draw_sprite(spr_player_health, i, 0, 6016)
}

if(playerState == 1) {

    var i = (43 / 100) * global.playerPlanetHealth

    if(i &lt; 0) {
        i = 0;
    } else if (i &gt; 43) {
        i = 43;
    }

    draw_sprite(spr_player_health, i, view_xview[0], view_yview[0])
    if(playerDir == 1) {
        image_xscale = -1;
    } else {
        image_xscale = 1;
    }
    if(global.playerWeapon) {
        sprite_index = spr_gun_male;
        image_angle = 0;
        view_angle[0] = 0;
    } else {
        sprite_index = spr_player_male;
        image_angle = 0;
        view_angle[0] = 0;
    }
    draw_self()
}

if(playerState == 2) {

    var gravText = string(global.planetGrav * 10) + "N"

    draw_text(view_xview[0] + (view_wview[0] - string_width(gravText)),view_yview[0],gravText)

    var i = (43 / 100) * global.playerPlanetHealth

    if(i &lt; 0) {
        i = 0;
    } else if (i &gt; 43) {
        i = 43;
    }

    draw_sprite(spr_player_health, i, view_xview[0], view_yview[0])

    if(playerDir == 1) {
        image_xscale = -1;
    } else {
        image_xscale = 1;
    }
    if(global.playerWeapon) {
        sprite_index = spr_gun_female;
        image_angle = 0;
        view_angle[0] = 0;
    } else {
        sprite_index = spr_player_female;
        image_angle = 0;
        view_angle[0] = 0;
    }
    draw_self()
}

if(playerState == 3) {
    if(room == rm_space) {
        view_angle[0] = 0
        draw_set_font(fnt_dead)
        draw_set_color(c_red)
        draw_set_halign(fa_center)
        draw_text(x,y-64,"You Died!")
        draw_set_font(fnt_dead_score)
        draw_text(x,y,"Score: " + string(global.playerScore))
        draw_text(x,y+64,"Press ENTER to return to menu...")
        draw_set_font(fnt_normal)
        draw_set_color(c_black)
        x = room_height / 2
        y = room_width / 2
    } else {
        draw_set_font(fnt_dead_planet)
        draw_set_color(c_red)
        draw_set_halign(fa_center)
    }
    
    if(keyboard_check(vk_enter)) {
        draw_set_color(c_black)
        draw_set_font(fnt_normal)
        room_goto(rm_mainMenu)
        instance_destroy()
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
